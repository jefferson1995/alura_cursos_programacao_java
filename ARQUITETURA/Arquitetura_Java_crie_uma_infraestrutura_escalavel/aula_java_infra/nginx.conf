# Definindo uma seção de eventos para configurar o comportamento das conexões
events {
    worker_connections 1024;  # Define o número máximo de conexões simultâneas por worker process
}

# Definindo um grupo de servidores com a diretiva `upstream`
http {
    # Definindo o formato do log
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for" '
                      'upstream_addr=$upstream_addr';  # Adiciona o endereço do servidor de backend

    access_log /var/log/nginx/access.log main;  # Define onde o log será gravado
    upstream app_servers {
        server app-1:8087;  # Define o servidor app-1 na porta 8087
        server app-2:8087;  # Define o servidor app-2 na porta 8088
    }

    server {
        listen 80;  # O servidor Nginx escuta na porta 80 (HTTP padrão)

        location / {
            proxy_pass http://app_servers;  # Redireciona as requisições para o grupo de servidores `app_servers`

            # Configurações para garantir que os cabeçalhos de proxy sejam passados corretamente
            proxy_set_header Host $host;  # Passa o cabeçalho `Host` original para o backend
            proxy_set_header X-Real-IP $remote_addr;  # Passa o IP real do cliente
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;  # Mantém o histórico de IPs de proxies anteriores
            proxy_set_header X-Forwarded-Proto $scheme;  # Passa o protocolo (HTTP ou HTTPS) utilizado na requisição
            proxy_set_header X-Backend-Server $upstream_addr; # Adiciona um cabeçalho personalizado para identificar qual servidor está respondendo | comando teste:
        }
    }
}
